---
title: "Challenge 1: Data Import, Description, and Transformation"
author: "Vara Prasad Gudi"
description: ""
date: "09/12/2024"
format: 
  html: 
    embed-resources: true
    self-contained-math: true
---

**Make sure you change the author's name and the date.**

## Setup

If you have not installed the following packages, please install them before loading them.

```{r packages}
#| message: false
#| warning: false
library(tidyverse)
library(readr)
library(readxl)
library(haven) #for loading other datafiles (SAS, STATA, SPSS, etc.)
```

## Challenge Overview

This first challenge aims to practice the following skill sets:

1.  Read datasets in different file types;

2.  Describe the datasets;

3.  Exploring a few basic functions of data transformation and wrangling and present some descriptive statistics (such as min, max, and median).

There will be coding components (reading datasets and data transformation) and writing components (describing the datasets and some statistical information). Please read the instructions for each part and complete your challenges.

## Create your R quarto project and submit the standalone .html file.

Please use Challenge 0 in week 1 as a practice of rendering html files. Find how to make standalone html files in the week 1 lecture slides and videos.

## Datasets

There are four datasets provided in this challenge. Please download the following dataset files from Canvas and save them to a folder within your project working directory (e.g.: "DACSS601_data"). If you don't have a folder to store the datasets, please create one.

-   babynames.csv (Required) ⭐
-   ESS_5.dta (Option 1) ⭐
-   p5v2018.sav (Option 2)⭐
-   railroad.xlsx (Required)⭐⭐

## Part 1 (Required). The Baby Names Dataset

1.  **Read in the `babynames.csv` dataset, and check the first few rows:**

    ```{r}
    # Load the babynames dataset from CSV file
    baby_names_data <- read_csv('./data/babynames.csv', show_col_types = FALSE)

    # Display the first few rows of the dataset
    head(baby_names_data)
    ```

2.  **Data Description: Please use the necessary commands and codes and briefly describe this data with a short writing paragraph answering the following questions.**

    ```{r}
    # dimension of the data - babynames
    dim(baby_names_data)
    ```

    ```{r}
    # column names in babynames
    colnames(baby_names_data)
    ```

    \(1\) What are the dimensions of the data (# of rows and columns)?\
    Ans: Rows: 2084710, Columns: 4

    \(2\) What do the rows and columns mean in this data?\
    Ans:

    -   Each row in "babynames" represents the occurrence of a specific baby name in a particular year.
    -   Columns
        -   Name: Baby's name
        -   Sex: Baby's gender (male or female)
        -   Occurrences: Number of times the name appeared in that year
        -   Year: The year the name was recorded

    \(3\) What is the unit of observation/analysis? In other words, what does each case in this dataset mean?\
    Ans: Each row represents the occurrence of a specific baby name in a given year.

    \(4\) According to the lecture, is this "tidy" data?\
    Ans: Yes, this is a tidy data because each row is an observation and each column is a variable.

3.  **Data Transformation: use appropriate commands and codes and answer the following questions.**

    ```{r}
    # Unique male names, female names, and total unique names
    unique_male_names <- length(unique(subset(baby_names_data, Sex == "Male")$Name))
    unique_female_names <- length(unique(subset(baby_names_data, Sex == "Female")$Name))
    total_unique_names <- length(unique(baby_names_data$Name))

    # Print the results
    cat("Number of unique male names:", unique_male_names, "\n")
    cat("Number of unique female names:", unique_female_names, "\n")
    cat("Total unique names:", total_unique_names, "\n")
    ```

    ```{r}
    # Years of data recorded - part 1
    earliest_year <- min(baby_names_data$Year)
    latest_year <- max(baby_names_data$Year)
    total_unique_years <- length(unique(baby_names_data$Year))

    # Print the number of unique years
    cat("Number of unique years:", total_unique_years, "\n")

    # Display unique years recorded
    unique(baby_names_data$Year)
    ```

    ```{r}
    # Summary statistics for Occurrences column
    summary_statistics <- baby_names_data %>%
      summarize(
        mean_value = mean(Occurrences),
        median_value = median(Occurrences),
        min_value = min(Occurrences),
        max_value = max(Occurrences)
      )
    summary_statistics
    ```

    ```{r}
    # Summarize the Occurrences column (alternative method)
    summary_statistics_alt <- summarise(baby_names_data, 
        mean_value = mean(Occurrences),
        median_value = median(Occurrences),
        min_value = min(Occurrences),
        max_value = max(Occurrences)
    )
    summary_statistics_alt
    ```

    ```{r}
    # Adding a 'decade' column to the dataset
    baby_names_data <- mutate(baby_names_data, decade = 10 * (Year %/% 10))
    tail(baby_names_data)

    # Summary statistics by decade
    summary_by_decade <- baby_names_data %>%
      group_by(decade) %>%
      summarize(
        min_occurrences = min(Occurrences),
        mean_occurrences = mean(Occurrences),
        median_occurrences = median(Occurrences),
        max_occurrences = max(Occurrences)
      )
    tail(summary_by_decade)
    ```

    \(1\) How many unique male names, unique female names, and total unique names are in the data? Ans:

    -   Unique Male Names: 43653
    -   Unique Female Names: 70225
    -   Total Unique Names: 102447

    \(2\) How many years of names does this data record?\
    Ans: The data spans approximately 143 years (from 1880 to 2022).

    \(3\) Summarize the min, mean, median, and max of "Occurrence". (Must use summarize())\
    Ans: Min: 5, Mean: 175.2112, Median: 12, Max: 99693

    \(4\) (Optional) Summarize the min, mean, median, and max of "Occurrence" by decade.\
    Ans: The above code block provides a summary of the printed result.

## Part 2. Choose One Option of Tasks to Complete

**In this part, please choose one of the two datasets to complete the tasks.**

### Option 1: The European Social Survey Dataset

The European Social Survey (ESS) is an academically-driven multi-country survey, which has been administered in over 30 countries to date. Its three aims are: first - to monitor and interpret changing public attitudes and values within Europe and to investigate how they interact with Europe's changing institutions; second - to advance and consolidate improved methods of cross-national survey measurement in Europe and beyond; and third - to develop a series of European social indicators, including attitudinal indicators.

In the fifth round, the survey covers 28 countries and investigates two major topics: Family Work and Wellbeing and Justice.

1.  **Read in the `ESS_5.dta` dataset.**

    ```{r}
    ess <- read_dta("./data/ESS_5.dta")
    head(ess)
    ```

2.  **Data Description: Please use the necessary commands and codes and briefly describe this data with a short writing paragraph answering the following questions.**

    \(1\) What are the dimensions of the data (# of rows and columns)?

    ```{r}
    dim(ess)
    ```

    Ans: Rows: 52458, Columns: 696

    As we can see, this dataset is very large. We don't want to study the whole data. Let's just look at the following columns: `idno`, `essroud`, `male`, `age`, `edu`, `income_10`, `eth_major`, `media` (a standardized measure of the frequency of media consumption), and `cntry`.

    ```{r}
    # Selecting a subset of columns from the ESS dataset
    ess_data_subset <- ess[, c("idno", "essround", "male", "age", "edu", "income_10", "eth_major", "media", "cntry")]

    # Display the first few rows of the subset
    head(ess_data_subset)
    ```

    \(2\) What do the rows and columns mean in this data? <br> Ans:

    -   Each row is an individual response for the ESS survey
    -   Columns in the ESS Data (following info is available in codebook ess)
        -   idno: respondent ID number
        -   essround: ESS survey round
        -   male: a recoded variable of F2 (Sex)
        -   age: a recoded variable of F3 (using 2023 – “Year Born”)
        -   edu: Highest level of education successfully completed
        -   income_10: income deciles; a recoded variable of the original income variable F41
        -   eth_major: Do you belong to a majority ethnic group in the country?
        -   media: a standardized measure of media consumption
        -   cntry: country of the respondent's residence

    \(3\) What is the unit of observation/analysis? In other words, what does each case in this dataset mean? <br> Ans: Each row represents an individual response in the ESS survey.

    \(4\) According to the lecture, is this "tidy" data? <br> Ans: Yes, this is tidy data because each row represents an observation, and each column corresponds to a variable.

3.  **Data Transformation: use necessary commands and codes, and answer the following questions.**

    ```{r}
    # Calculate the number of unique countries in the subset of ESS data
    unique_countries <- length(unique(ess_data_subset$cntry))

    # Print the number of unique countries
    cat("Unique countries in the data:", unique_countries, "\n")
    ```

    ```{r}
    #| warning: false
    #2 The range and average of age, education level, and media consumption
    summarize(ess_data_subset, 
              age_range = range(age, na.rm = TRUE), 
              age_mean = mean(age, na.rm = TRUE), 
              edu_range = range(edu, na.rm = TRUE), 
              edu_mean = mean(edu, na.rm = TRUE), 
              media_range = range(media, na.rm = TRUE), 
              media_mean = mean(media, na.rm = TRUE))
    ```

    ```{r}
    # Calculate the number of missing values in eth_major and income_10 columns
    missing_ethnicity_data <- sum(is.na(ess_data_subset$eth_major))
    missing_income_data <- sum(is.na(ess_data_subset$income_10))

    # Print the number of missing values in eth_major and income_10
    cat("Number of missing data in eth_major:", missing_ethnicity_data, "\n")
    cat("Number of missing data in income_10:", missing_income_data, "\n")
    ```

    \(1\) How many unique countries are in the data?\
    Ans: 27

    \(2\) What are the range and average of the following variables: `age`, `edu`, and `media`? You must use `summarize()`.\
    Ans:

    -   age
        -   Range: (14, 101) - difference : 87
        -   average: 47.9152921389117
    -   edu
        -   Range: (1, 4) - difference : 3
        -   average: 2.76753077923071
    -   media
        -   Range: (0, 1) - difference : 1
        -   average: 0.478680171233537

    \(3\) How many missing data (`NA`) are in the following variables: `eth_major` and `income_10`? (tips: use `is.na()`)\
    Ans:

    -   missing data in eth_major: 1310
    -   missing data in income_10: 12620
    -   total missing data: 13930

### Option 2: Polity V Data

The Polity data series is a data series in political science research. Polity is one of the prominent datasets that measure democracy and autocracy. The Polity5 dataset covers all major, independent states in the global system over the period 1800-2018 (i.e., states with a total population of 500,000 or more in the most recent year; currently 167 countries with Polity5 refinements completed for about half those countries).

1.  **Read in the `p5v2018.sav` dataset.**

    ```{r}
    p5v <- read_sav('./data/p5v2018.sav')
    head(p5v)
    ```

2.  **Data Description: Please use the necessary commands and codes and briefly describe this data with a short writing paragraph answering the following questions.**

    ```{r}
    dim(p5v)
    ```

    \(1\) What are the dimensions of the data (# of rows and columns)? <br>

    Ans: Rows: 17574, Columns: 37

    As we can see, this data contains many columns. We don't want to study the whole data. Let's keep the first seven columns and the ninth and tenth columns.

    ```{r}
    # Selecting a subset of columns from the Polity5 dataset
    polity5_data_subset <- p5v[, c(1:7, 9, 10)]

    # Display the first few rows of the subset
    head(polity5_data_subset)
    ```

    \(2\) For the reloaded data, what do the rows mean in this data? What do the columns (#2-#8) mean? (If you have questions, check out [p.11-16 of the User Manual/Codebook of the dataset](https://www.systemicpeace.org/inscr/p5manualv2018.pdf). <br> Ans:

    -   p5v rows contain data from 1800 to 2018 on the democracy and autocracy of nearly all political entities.
    -   Column details:
        -   p5: Polity5 Revision Indicator – Flag variable identifying countries (P5=1) that have completed the Polity5 systematic and detailed review.
        -   cyear: Country Year – A unique identifier for each country year, consisting of the country code.
        -   ccode: Numeric Country Code.
        -   scode: Alpha Country Code.
        -   country: Alpha Country Name – Standardized country name for easier recognition.
        -   year: Year Coded – A four-digit code assigned based on the regime in place on December 31 of that year.
        -   flag: Tentative Coding – Flagged trichotomous indicator showing coders’ confidence in the component variable scores during a Polity annual update.
        -   democ: Institutionalized Democracy – Defined by three essential, interdependent elements.
        -   autoc: Institutionalized Autocracy – Refers to authoritarian regimes characterized by a lack of regularized political competition and disregard for political freedoms.

    \(3\) What is the unit of observation? In other words, what does each case mean in this data?\
    Ans: Each row is an individual response in the ESS survey

    \(4\) According to the lecture, is this a "tidy" data?\
    Ans: Yes, this is a tidy data because each row is an observation and each column is a variable.

3.  **Data Transformation: use necessary commands and codes and answer the following questions.**

    ```{r}
    # Calculate the number of unique countries in the Polity5 data subset
    unique_countries_polity5 <- length(unique(polity5_data_subset$country))

    # Print the number of unique countries
    cat("Unique countries in the data:", unique_countries_polity5, "\n")
    ```

    ```{r}
    # Calculate the range and number of unique years in the Polity5 data subset
    min_year_polity5 <- min(polity5_data_subset$year)
    max_year_polity5 <- max(polity5_data_subset$year)
    unique_years_count_polity5 <- length(unique(polity5_data_subset$year))

    # Display the minimum and maximum years
    min_year_polity5
    max_year_polity5

    # Display the unique years recorded in the dataset
    unique(polity5_data_subset$year)
    ```

    ```{r}
    #| warning: false
    # Filter the Polity5 data subset to exclude missing or invalid values for the 'democ' column
    polity5_filtered <- polity5_data_subset %>%
      filter(democ != -88 & democ != -77 & democ != -66)

    # Calculate the range and mean for 'democ' and 'autoc' columns
    summarize(polity5_filtered, 
              democ_range = range(democ, na.rm = TRUE), 
              democ_mean = mean(democ, na.rm = TRUE), 
              autoc_range = range(autoc, na.rm = TRUE), 
              autoc_mean = mean(autoc, na.rm = TRUE))
    ```

    ```{r}
    # Calculate the number of missing or invalid values in the 'democ' column
    missing_democ_values <- polity5_data_subset %>%
      filter(democ == -88 | democ == -77 | democ == -66) %>%
      nrow()

    # Calculate the number of missing or invalid values in the 'autoc' column
    missing_autoc_values <- polity5_data_subset %>%
      filter(autoc == -88 | autoc == -77 | autoc == -66) %>%
      nrow()

    # Print the number of missing values for 'democ' and 'autoc'
    cat("Number of missing data in democ:", missing_democ_values, "\n")
    cat("Number of missing data in autoc:", missing_autoc_values, "\n")
    ```

    \(1\) How many unique countries are in the data? <br> Ans: 195

    \(2\) How many years does this data record? <br> Ans: Min Year Recorded: 1776, Max Year Recorded: 2020, Total years: 245

    \(3\) What are the range and average of the following variables: "democ" and "autoc"?\
    Ans:

    -   democ
        -   range: (0, 10) - difference : 10
        -   average: 3.50116313748882
    -   autoc
        -   range: (0, 10) - difference: 10
        -   average: 4.02195049209663

    \*\* Noted that in this data, negative integers (-88, -77, and -66) represent special cases. You should exclude them when calculating the range, average, and NAs.

    \(4\) How many missing data (NA) are in the following variables: "democ" and "autoc"? (tips: use is.na())\
    Ans:\
    If it is N/A, treat it as zero. After considering -88, -77, and -66 as missing values: - Missing values in democ: 809

    -   Missing values in autoc: 809

## Part 3. The Railroad Employee Data

1.  **Read in the `railroads.xlsx` dataset.**

    Many government organizations still use Excel spreadsheets to store data. This railroad dataset, published by the Railroad Retirement Board, is a typical example. It records the number of employees in each county and state in 2012.

    **Please load the data in R in a clean manner. You can start by doing the following things step by step.**

    \(1\) Read the first sheet of the Excel file;

    \(2\) Skip the title rows;

    \(3\) Remove empty columns

    \(4\) Delete rows that contain the name "total", e.g. `"WI total"`

    \(5\) Delete the row for State "CANADA"

    \(6\) Remove the table notes (the last two rows)

    ```{r}

    # Step 1: Read the railroads dataset from the Excel file, skipping the first 3 rows
    railroads_data <- read_excel("./data/railroads.xlsx", sheet = 1, skip = 3)

    # Step 3: Remove columns where all values are NA (missing)
    railroads_data <- railroads_data %>% select(-where(~all(is.na(.))))

    # Step 4: Remove rows where 'STATE' or 'COUNTY' contains the word "total" (case-insensitive)
    railroads_data <- railroads_data %>% filter(!grepl("total", STATE, ignore.case = TRUE))
    railroads_data <- railroads_data %>% filter(!grepl("total", COUNTY, ignore.case = TRUE))

    # Step 5: Filter out the rows where 'STATE' is "CANADA"
    railroads_data <- railroads_data %>% filter(STATE != "CANADA")

    # Step 6: Remove the last two rows of the dataset
    railroads_data <- head(railroads_data, n=-2)

    # Display the last few rows of the cleaned dataset
    tail(railroads_data)
    ```

2.  **Data Description: Please use the necessary commands and codes and briefly describe this data with a short writing paragraph answering the following questions.**

    ```{r}
    dim(railroads_data)
    ```

    \(1\) What is the dimension of the data (# of rows and columns)?\
    Ans: Rows: 2930, Columns: 3

    \(2\) What do the rows and columns mean?\
    Ans:

    -   Raw Data: Most rows represent the number of employees in Railway for a particular county, with some rows containing noisy text.
    -   After cleaning the data based on the steps above:
        -   Each row now represents the number of railway employees in a particular county, with state information included.
    -   Columns:
        -   STATE: State in the USA
        -   COUNTY: County in the USA
        -   TOTAL: Total number of railway employees in that county

    \(3\) What is the unit of observation/analysis? In other words, what does each case mean in this data?\
    Ans: After cleaning the data based on the above steps, each row represents the number of railway employees for a particular county, with state information also provided.

    \(4\) According to the lecture, is this a "tidy" data?\
    Ans: Yes, this is a tidy data because each row is an observation and each column is a variable.

3.  **Data Transformation: use necessary commands and codes and answer the following questions.**

    ```{r}
    # Calculate the number of unique counties and states in the railroads data
    unique_counts_railroads_data <- railroads_data %>%
      summarize(across(c(COUNTY, STATE), n_distinct))

    # Display the unique counts
    unique_counts_railroads_data
    ```

    ```{r}
    # Calculate the total number of railway employees
    total_employees <- sum(railroads_data$TOTAL, na.rm = TRUE)

    # Display the total number of employees
    total_employees
    ```

    ```{r}
    # Summarize the 'TOTAL' column with mean, median, min, and max values
    railroads_summary <- summarize(railroads_data, 
      mean_value = mean(TOTAL, na.rm = TRUE),
      median_value = median(TOTAL, na.rm = TRUE),
      min_value = min(TOTAL, na.rm = TRUE),
      max_value = max(TOTAL, na.rm = TRUE)
    )

    # Display the summary
    railroads_summary
    ```

    ```{r}
    # Find the state with the highest number of railway employees
    most_emp_state <- railroads_data %>%
      group_by(STATE) %>%
      summarize(total_sum = sum(TOTAL, na.rm = TRUE)) %>%
      arrange(desc(total_sum))

    # Display the state with the highest number of employees
    most_emp_state
    ```

    ```{r}
    # Find the county with the highest number of railway employees, grouped by COUNTY and STATE
    most_emp_county <- railroads_data %>%
      group_by(COUNTY, STATE) %>%
      summarize(total_sum = sum(TOTAL, na.rm = TRUE)) %>%
      arrange(desc(total_sum))

    # Display the county with the highest number of employees
    most_emp_county
    ```

    \(1\) How many unique counties and states are in the data? (tips: you can try using the `across()` function to do an operation on two columns at the same time)\
    Ans: County: 1709, State: 53

    \(2\) What is the total number of employees (`total_employees`) in this data?\
    Ans: Total Employees: 255432

    \(3\) What are the min, max, mean, and median of `total_employees`\
    Ans:

    -   Min: 1
    -   Max: 8207
    -   Mean: 87.17816
    -   Median: 21

    \(4\) Which states have the most employees? And which countries have the most employees? (tips: use `group_by()` and `arrange()`)\
    Ans:

    -   TX state has the most employees among all states.
    -   COOK county (IL state) has the most employees among all counties.
